from playwright.sync_api import expect, Page

# Page Object para operações com aba Empregatício de clientes.
class GeneralEmployment:
    def __init__(self, page: Page):
        self.page = page

    # Validar e clicar na aba Empregatício.
    def click_aba_employment(self):
        expect(self.page.locator('#menu_items_pri > :nth-child(6)')).to_be_visible()
        expect(self.page.locator('#menu_items_pri > :nth-child(6)')).not_to_have_attribute('disabled', 'true')
        self.page.route('**/views/cliente/clienteEmpregaticioLista.html', lambda route: route.continue_())
        self.page.locator('#menu_items_pri > :nth-child(6)').click()
        self.page.wait_for_response('**/views/cliente/clienteEmpregaticioLista.html', timeout=40000)

    # Validar informações da tela antes de adicionar qualquer coisa.
    def validate_aba_employment_empty(self):
        expect(self.page.locator('h3')).to_be_visible()
        expect(self.page.locator('h3')).to_have_text('Empregatício')
        expect(self.page.locator('.layout-align-end-end > .md-fab')).to_be_visible()
        expect(self.page.locator('.layout-align-end-end > .md-fab')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('.text-align-center')).to_be_visible()
        expect(self.page.locator('.text-align-center')).to_have_text('Não foi encontrado nenhum registro')
        expect(self.page.locator('.btn')).to_be_visible()
        expect(self.page.locator('.btn')).not_to_have_attribute('disabled', 'true')

    # Clicar no botão + para adicionar uma nova referência bancária.
    def click_add_new_employment(self):
        self.page.route('**/services/v3/dados_tabela/tipocomprovanterenda', lambda route: route.continue_())
        self.page.locator('.layout-align-end-end > .md-fab').click()
        self.page.wait_for_response('**/services/v3/dados_tabela/tipocomprovanterenda', timeout=40000)

    # Validar informações do modal Empregatício antes de preencher as informações.
    def modal_employment_empty(self):
        expect(self.page.locator('.md-dialog-fullscreen > ._md > .md-toolbar-tools > .flex')).to_be_visible()
        expect(self.page.locator('.md-dialog-fullscreen > ._md > .md-toolbar-tools > .flex')).to_have_text('Empregatício')
        expect(self.page.locator('.md-dialog-fullscreen > ._md > .md-toolbar-tools > .md-icon-button > .ng-binding')).to_be_visible()
        expect(self.page.locator('.md-dialog-fullscreen > ._md > .md-toolbar-tools > .md-icon-button > .ng-binding')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('#txtCnpjEmpr')).to_be_visible()
        expect(self.page.locator('#txtCnpjEmpr')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtCnpjEmpr"]')).to_have_text('CNPJ')
        expect(self.page.locator('#txtTelEmp')).to_be_visible()
        expect(self.page.locator('#txtTelEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtTelEmp"]')).to_have_text('Telefone')
        expect(self.page.locator('#txtNomeEmp')).to_be_visible()
        expect(self.page.locator('#txtNomeEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtNomeEmp"]')).to_have_text('Empresa')
        expect(self.page.locator('#txtRamoAtividade')).to_be_visible()
        expect(self.page.locator('#txtRamoAtividade')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtRamoAtividade"]')).to_have_text('Ramo atividade')
        expect(self.page.locator('#txtCepEmp')).to_be_visible()
        expect(self.page.locator('#txtCepEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtCepEmp"]')).to_have_text('CEP')
        expect(self.page.locator(':nth-child(3) > .md-icon-float > .ng-binding')).to_be_visible()
        expect(self.page.locator(':nth-child(3) > .md-icon-float > .ng-binding')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('#txtEnderecoEmp')).to_be_visible()
        expect(self.page.locator('#txtEnderecoEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtEnderecoEmp"]')).to_have_text('Endereço')
        expect(self.page.locator('#txtNumEmp')).to_be_visible()
        expect(self.page.locator('#txtNumEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtNumEmp"]')).to_have_text('Número')
        expect(self.page.locator('#txtComplEmp')).to_be_visible()
        expect(self.page.locator('#txtComplEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtComplEmp"]')).to_have_text('Complemento')
        expect(self.page.locator('#txtBairroEmp')).to_be_visible()
        expect(self.page.locator('#txtBairroEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtBairroEmp"]')).to_have_text('Bairro')
        expect(self.page.locator('#txtUfEmp')).to_be_visible()
        expect(self.page.locator('#txtUfEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtUfEmp"]')).to_have_text('Estado')
        expect(self.page.locator('#txtCidadeEmp')).to_be_visible()
        expect(self.page.locator('#txtCidadeEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtCidadeEmp"]')).to_have_text('Cidade')
        expect(self.page.locator('#txtAdmiEmp > .md-datepicker-button')).to_be_visible()
        expect(self.page.locator('#txtAdmiEmp > .md-datepicker-button')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('input[aria-label="Admissão"]')).to_be_visible()
        expect(self.page.locator('#txtSalarioEmp')).to_be_visible()
        expect(self.page.locator('#txtSalarioEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtSalarioEmp"]')).to_have_text('Salário')
        expect(self.page.locator('#txtDtComprEmp > .md-datepicker-button')).to_be_visible()
        expect(self.page.locator('#txtDtComprEmp > .md-datepicker-button')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('input[aria-label="Data Comprovante"]')).to_be_visible()
        expect(self.page.locator('#txtTipoComprEmp')).to_be_visible()
        expect(self.page.locator('#txtTipoComprEmp')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtTipoComprEmp"]')).to_have_text('Tipo comprovante')
        expect(self.page.locator('#idcbo')).to_be_visible()
        expect(self.page.locator('#idcbo')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="idcbo"]')).to_have_text('Código')
        expect(self.page.locator('#txtEmailRefPes')).to_be_visible()
        expect(self.page.locator('#txtEmailRefPes')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtEmailRefPes"]')).to_have_text('Email')
        expect(self.page.locator('#txtTelefoneRefPes')).to_be_visible()
        expect(self.page.locator('#txtTelefoneRefPes')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtTelefoneRefPes"]')).to_have_text('Telefone')
        expect(self.page.locator('#txtRelacionamentoRefPes')).to_be_visible()
        expect(self.page.locator('#txtRelacionamentoRefPes')).not_to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtRelacionamentoRefPes"]')).to_have_text('Relacionamento')
        expect(self.page.locator('#txtDtInclusaoRefPes')).to_be_visible()
        expect(self.page.locator('#txtDtInclusaoRefPes')).to_have_attribute('disabled', 'true')
        expect(self.page.locator('label[for="txtDtInclusaoRefPes"]')).to_have_text('Data inclusão')
        expect(self.page.locator('#btnModalAddRefPessoal')).to_be_visible()
        expect(self.page.locator('#btnModalAddRefPessoal')).to_have_attribute('disabled', 'true')